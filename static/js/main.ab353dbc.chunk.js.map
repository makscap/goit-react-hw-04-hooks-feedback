{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Value/Value.jsx","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","header","FeedbackOptions","options","onLeaveFeedback","map","el","type","button","onClick","slice","toUpperCase","uuidv4","Value","goodStats","neutralStats","badStats","total","positivePercentage","text","Notification","message","Feedback","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","feedback","item","statistics","Math","round","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,WAAa,6BAA6B,KAAO,uBAAuB,OAAS,2B,sICe5JC,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,qCACGD,GAAS,oBAAIE,UAAWC,IAAEC,OAAjB,SAA0BJ,IACnCC,M,QCeQI,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAAAC,GAAE,OACb,wBAEEC,KAAK,SACLR,UAAWC,IAAEQ,OACbC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,EAAGI,MAAM,EAAG,GAAGC,cAAgBL,EAAGI,MAAM,IALpCE,qBCiBEC,EAtBD,SAAC,GAAD,IACZC,EADY,EACZA,UACAC,EAFY,EAEZA,aACAC,EAHY,EAGZA,SACAC,EAJY,EAIZA,MACAC,EALY,EAKZA,mBALY,OAOZ,qCACE,oBAAGnB,UAAWC,IAAEmB,KAAhB,kBAA4BL,KAC5B,oBAAGf,UAAWC,IAAEmB,KAAhB,qBAA+BJ,KAC/B,oBAAGhB,UAAWC,IAAEmB,KAAhB,iBAA2BH,KAC3B,oBAAGjB,UAAWC,IAAEmB,KAAhB,mBAA6BF,KAC7B,oBAAGlB,UAAWC,IAAEmB,KAAhB,+BAAyCD,EAAzC,WCLWE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGtB,UAAWC,IAAEmB,KAAhB,SAAuBE,KCGjB,SAASC,IAAY,IAAD,EACXC,mBAAS,GADE,mBAC5BC,EAD4B,KACtBC,EADsB,OAELF,mBAAS,GAFJ,mBAE5BG,EAF4B,KAEnBC,EAFmB,OAGbJ,mBAAS,GAHI,mBAG5BK,EAH4B,KAGvBC,EAHuB,KAqB3BC,EAAqB,WACzB,OAAON,EAAOE,EAAUE,GAMxB,OACE,sBAAK7B,UAAWC,IAAE+B,SAAlB,UACE,cAAC,EAAD,CAASlC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5Bc,SAAA4B,GAC1B,OAAQA,GACN,IAAK,OACHP,GAAQ,SAAAzB,GAAC,OAAIA,EAAI,KACjB,MACF,IAAK,UACH2B,GAAW,SAAA3B,GAAC,OAAIA,EAAI,KACpB,MACF,IAAK,MACH6B,GAAO,SAAA7B,GAAC,OAAIA,EAAI,KAChB,MACF,QACA,aAmBM,cAAC,EAAD,CAASH,MAAM,aAAaE,UAAWC,IAAEiC,WAAzC,SAC4B,IAAzBH,IACC,cAAC,EAAD,CAAcT,QAAQ,wBAEtB,cAAC,EAAD,CACEP,UAAWU,EACXT,aAAcW,EACdV,SAAUY,EACVX,MAAOa,IACPZ,mBAnBHgB,KAAKC,MAAc,IAAPX,EAAcM,YC7BtB,SAASM,IACtB,OAEI,cAACd,EAAD,ICPN,IAYee,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab353dbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__3n1tl\",\"header\":\"Feedback_header__1nQwf\",\"statistics\":\"Feedback_statistics__1lsnk\",\"text\":\"Feedback_text__frkXL\",\"button\":\"Feedback_button__1E_-H\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Feedback/Feedback.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <>\n      {title && <h1 className={s.header}>{title}</h1>}\n      {children}\n    </>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Section;","import React from 'react';\nimport s from '../Feedback/Feedback.module.css';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {options.map(el => (\n      <button\n        key={uuidv4()}\n        type=\"button\"\n        className={s.button}\n        onClick={() => onLeaveFeedback(el)}\n      >\n        {el.slice(0, 1).toUpperCase() + el.slice(1)}\n      </button>\n    ))}\n  </>\n);\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;","import React from 'react';\nimport s from '../Feedback/Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nconst Value = ({\n  goodStats,\n  neutralStats,\n  badStats,\n  total,\n  positivePercentage,\n}) => (\n  <>\n    <p className={s.text}>Good:{goodStats}</p>\n    <p className={s.text}>Neutral:{neutralStats}</p>\n    <p className={s.text}>Bad:{badStats}</p>\n    <p className={s.text}>Total:{total}</p>\n    <p className={s.text}>Positive feedback:{positivePercentage}%</p>\n  </>\n);\nValue.propTypes = {\n  goodStats: PropTypes.number.isRequired,\n  neutralStats: PropTypes.number.isRequired,\n  badStats: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Value;","import PropTypes from 'prop-types';\nimport s from '../Feedback/Feedback.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.text}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import React, { useState } from 'react';\nimport Section from '../Section/Section';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Value from '../Value/Value';\nimport s from '../Feedback/Feedback.module.css';\nimport Notification from '../Notification/Notification';\n\nexport default function Feedback() {\nconst [good, setGood] = useState(0);\nconst [neutral, setNeutral] = useState(0);\nconst [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = item => {\nswitch (item) {\n  case 'good':\n    setGood(s => s + 1);\n    break;\n  case 'neutral':\n    setNeutral(s => s + 1);\n    break;\n  case 'bad':\n    setBad(s => s + 1);\n    break;\n  default:\n  return;\n}\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  }\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good * 100) / countTotalFeedback());\n  };\n    return (\n      <div className={s.feedback}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\" className={s.statistics}>\n          {countTotalFeedback() === 0 ? (\n            <Notification message=\"No one reported yet\"></Notification>\n          ) : (\n            <Value\n              goodStats={good}\n              neutralStats={neutral}\n              badStats={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n","import React from 'react';\n// import Section from './components/Section/Section';\nimport Feedback from './components/Feedback/Feedback';\n\nexport default function App() {\n  return (\n\n      <Feedback/>\n\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}